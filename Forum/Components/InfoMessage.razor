@using System.Timers 
@inject Data.InfoMessage MessageService
@implements IDisposable

<style>
	#helper-container {
		position: absolute;
		@*top: 0; right: 0; bottom: 0; left: 0;*@
		bottom: 5%; right: 0; left: 0;
		margin: auto;
		width: 25rem;
		height: 5rem;
		line-height: 5rem;
		text-align: center;

		background: #909090;
		border: 2px groove #ffffff;
	}
</style>

<div id="helper-container" style="@_style">
	@_message
</div>

@code {
	private string _message;
	private string _style = "display: none;";
	private Timer timer;

	protected override async Task OnInitializedAsync()
	{
		MessageService.MessageEvent += () =>
		{
			InvokeAsync(() =>
			{
				_message = MessageService.Message;
				Show();
			});
		};

		timer = new Timer(1500);
		timer.Elapsed += (s, e) =>
		{
			InvokeAsync(() =>
			{
				timer.Stop();
				Hide();
			});
		};
	}

	private void Show()
	{
		_style = "";
		StateHasChanged();
		timer?.Start();
	}

	private void Hide()
	{
		_style = "display: none;";
		StateHasChanged();
	}

	public void Dispose()
	{
		timer?.Dispose();
	}
}
