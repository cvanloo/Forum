@using Microsoft.EntityFrameworkCore

<style>
	.border-left {
		border-left: 2px solid #9BAEC8 !important;
		border-radius: 0;
	}

	.collapsed {
		padding: 0 0.5rem !important;
		color: gray;
	}

		.collapsed span {
			display: none;
		}

	button {
		width: auto !important;
	}
</style>

<div class="second needs-padding border-left @_collapseClass">
	<p class="p-annotation-sm">
		@CommentModel.Creator.AccountName
		@CommentModel.Created.ToString("t"), @CommentModel.Created.ToString("d")
		<button class="btn-mini" @onclick="Collapse">[@_clpMsg]</button> @*▬*@
	</p>
	<span>
		<pre class="txt-title">@CommentModel.Text</pre>
		<button class="btn-mini" @onclick="ToggleCommentField">Answer</button>
		<div class="@_cfClass">
			<CommentField Thread="@CommentModel.Thread" Comment="@CommentModel" UpdateHandler="Update" /> @* TODO: .Thread AND Model? *@
		</div>

		@* ReSharper disable once UnusedVariable *@
		@foreach (var c in _children)
		{
			<Comment CommentModel="c" />
		}
	</span>
</div>

@code {
	[Parameter]
	public Entity.Comment CommentModel { get; set; }
	
	[CascadingParameter]
	private Model.Database DbContext { get; set; }

	private List<Entity.Comment> _children;
	private string _cfClass = "hidden";
	private string _collapseClass = "";
	private string _clpMsg = "-";

	protected override void OnInitialized()
	{
		Update();
	}

	private void ToggleCommentField()
	{
		if ("" == _cfClass)
			CloseCommentField();
		else
			OpenCommentField();
	}

	private void CloseCommentField()
	{
		_cfClass = "hidden";
	}

	private void OpenCommentField()
	{
		_cfClass = "";
	}

	private void Collapse()
	{
		if ("collapsed" == _collapseClass)
		{
			_collapseClass = "";
			_clpMsg = "-";
		}
		else
		{
			_collapseClass = "collapsed";
			_clpMsg = "+";
		}
	}

	private void Update()
	{
		_children = DbContext.Comments
    		.Include(c => c.Childs)
    		.ThenInclude(c => c.Creator)
    		.First(c => c.Id == CommentModel.Id).Childs.ToList();
		CloseCommentField();
		StateHasChanged();
	}
}
