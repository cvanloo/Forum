@using System.IO 
@* ReSharper disable once InconsistentNaming *@
@inject NavigationManager NavMan 

<div @onclick="OpenThread" style="cursor: pointer" class="needs-padding shiny">
	<p class="p-annotation-sm">
		@{
			var forumName = ThreadModel.Forum.Name;
			if (ThreadModel.Forum.IsDeleted)
			{
				forumName += " [Deleted]";
			}
		}
		@ThreadModel.Creator.AccountName@@@forumName
		@ThreadModel.Created.ToString("t"), @ThreadModel.Created.ToString("d")
	</p>
	<h5>@ThreadModel.Title</h5>
	<MarkdownView Content="@Content" />
	@* <pre class="main">@Content</pre> *@
	@{
		var tagText = "";
		@foreach (var t in ThreadModel.Tags)
		{
			tagText += ' ' + t.Name;
		}
	}
	<small>Tags: @tagText</small>
</div>
<hr>

@code {
	[Parameter]
	public Entity.Thread ThreadModel { get; set; }

	/// <summary>
	/// Reads and returns the first 500 characters from the threads content-file. 
	/// </summary>
	private string Content
	{
		get
		{
			if (ThreadModel.IsDeleted)
				return "[ Thread deleted. ]";

			try
			{
				var path = ThreadModel.ContentPath;
				var streamReader = new StreamReader(path);
				var buffer = new char[500];
				streamReader.Read(buffer);
				streamReader.Close();
				
				// Strings in C# are _not_ null-terminated.
				var trimmed = new string(buffer).Trim('\0');
				// return trimmed.Replace('\n', ' ');
				return trimmed;
			}
			catch (Exception)
			{
				return "[ An error occurred. ]";
			}
		}
	}

	/// <summary>
	/// Redirects to the thread page.
	/// </summary>
	private void OpenThread()
	{
		NavMan.NavigateTo("/thread/" + ThreadModel.Id);
	}
}
